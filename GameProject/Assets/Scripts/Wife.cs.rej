diff a/GameProject/Assets/Scripts/Wife.cs b/GameProject/Assets/Scripts/Wife.cs	(rejected hunks)
@@ -1,56 +0,59 @@
-﻿using System.Collections;
-using System.Collections.Generic;
-using UnityEngine;
+﻿//using System.Collections;
+//using System.Collections.Generic;
+//using UnityEngine;
 
-public class Wife : MonoBehaviour {
+//public class Wife : MonoBehaviour
+//{
 
-    private Transform wifeTr;
-    private Transform playerTr;
-    private UnityEngine.AI.NavMeshAgent nvAgent;
-    private float distance = 0;
-    private float angle = 10;
-    private Transform SearchPos;
-    private bool flag = true;
-    
+//    private Transform wifeTr;
+//    private Transform playerTr;
+//    private UnityEngine.AI.NavMeshAgent nvAgent;
+//    private float distance = 0;
+//    private float angle = 10;
+//    private Transform SearchPos;
+//    private bool flag = true;
 
-	// Use this for initialization
-	void Start () {
-        wifeTr = this.gameObject.GetComponent<Transform>();
-        playerTr = GameObject.FindWithTag("Player").GetComponent<Transform>();
-  
-        nvAgent = this.gameObject.GetComponent<UnityEngine.AI.NavMeshAgent>();
 
-        nvAgent.destination = playerTr.position;
-	}
-	
-	// Update is called once per frame
-	void Update () {
+//    // Use this for initialization
+//    void Start()
+//    {
+//        wifeTr = this.gameObject.GetComponent<Transform>();
+//        playerTr = GameObject.FindWithTag("Player").GetComponent<Transform>();
 
+//        nvAgent = this.gameObject.GetComponent<UnityEngine.AI.NavMeshAgent>();
 
-        nvAgent.destination = playerTr.position;
+//        nvAgent.destination = playerTr.position;
+//    }
 
+//    // Update is called once per frame
+//    void Update()
+//    {
 
-        distance = nvAgent.remainingDistance;
 
-        //Vector3 vec = playerTr.position - wifeTr.position;
+//        nvAgent.destination = playerTr.position;
 
 
-        //vec.Normalize();
+//        distance = nvAgent.remainingDistance;
 
+//        //Vector3 vec = playerTr.position - wifeTr.position;
 
-        if (distance < 8)
-        {
-            //vec = playerTr.position - SearchPos.position;
-            nvAgent.destination = wifeTr.position;
-            
-        }
-    }
-    //void Looking(Vector3 vec)
-    //{
-    //    Quaternion q = Quaternion.LookRotation(vec);
 
+//        //vec.Normalize();
 
-    //    nvAgent.transform.rotation = q;
-    //}
 
-}
+//        if (distance < 8)
+//        {
+//            //vec = playerTr.position - SearchPos.position;
+//            nvAgent.destination = wifeTr.position;
+
+//        }
+//    }
+//    //void Looking(Vector3 vec)
+//    //{
+//    //    Quaternion q = Quaternion.LookRotation(vec);
+
+
+//    //    nvAgent.transform.rotation = q;
+//    //}
+
+//}
